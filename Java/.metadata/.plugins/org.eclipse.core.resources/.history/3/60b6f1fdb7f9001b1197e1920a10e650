package com.controller;

import java.io.IOException;
import java.sql.ResultSet;
import java.util.Properties;
import java.util.Random;

import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.model.Model;

/**
 * Servlet implementation class Register
 */
@WebServlet("/Register")
public class Register extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// TODO Auto-generated method stub
		super.service(req, resp);
		String name = req.getParameter("name");
		String email = req.getParameter("email");
		String un = req.getParameter("un");
		String pwd= req.getParameter("pwd");
		String cpwd= req.getParameter("cpwd");
		
		if (pwd.equals(cpwd)) {
			Model m = new Model();
			m.setName(name);
			m.setEmail(email);
			m.setUn(un);
			m.setPwd(pwd);
			
			int rowsUpdated = m.register();
			if (rowsUpdated == 1) {
				String toEmail = req.getParameter("email");
				
				String subject="DO NOT REPLY: Mail from Java Program"; // mail subject line
				String msg="Link to reset password: "
						+ "http://localhost:8080/FirstProgram/resetPwd.html\n"
						+ "Use this OTP: " + otp; //mail body
				
				HttpSession sess = req.getSession(true);
				sess.setAttribute("toEmail", toEmail);
				sess.setAttribute("otp", otp);
				
				//Creating Session Object
				Properties prop = new Properties();
				prop.put("mail.smtp.host", "smtp.gmail.com");
				prop.put("mail.smtp.port", 587);
				prop.put("mail.smtp.auth", "true");
				prop.put("mail.smtp.starttls.enable", "true");

				Session session = Session.getDefaultInstance(prop, new javax.mail.Authenticator()
				{
					protected PasswordAuthentication getPasswordAuthentication()
					{
						//sender's mail id and pwd is encapsulated inside "SendersCredentials.java"
						return new PasswordAuthentication(Credentials.email, Credentials.pwd);
					}
				});

				
				try {
					//Composing the Mail
					MimeMessage mesg = new MimeMessage(session);
					mesg.setFrom(new InternetAddress(fromEmail));
					mesg.addRecipient(Message.RecipientType.TO,new InternetAddress(toEmail));
					mesg.setSubject(subject);  
					mesg.setText(msg);  
					
					//Sending the Mail
					Transport.send(mesg);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
				resp.sendRedirect("/FirstProgram/successReg.html");
			}
			else {
				resp.sendRedirect("/FirstProgram/didNotReg.html");
			}
		}
		else {
			resp.sendRedirect("/MyApp/wrongReg.html");
		}
		
		/*
		Random rand = new Random();
		int otp = rand.nextInt(900000) + 100000;
		
		 */
	}
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Register() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
