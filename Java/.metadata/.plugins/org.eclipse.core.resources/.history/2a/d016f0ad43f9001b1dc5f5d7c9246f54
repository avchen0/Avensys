package com.model;

import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Date;

public class Model {
	
	Connection con;
	PrintWriter pw;
	PreparedStatement pstmt;
	ResultSet res;
	// instance variables correspond to the columns in the employee table
	private String name;
	private String email;
	private String role;
	
	private String un;
	private String pwd;
	private String newpwd;
	private String acno;
	private int balance;
	
	public Model() {
		connect();
	}

	public String getName() {
		return name;
	}
	public String getEmail() {
		return email;
	}
	public String getRole() {
		return role;
	}
	public String getUn() {
		return un;
	}
	public String getPwd() {
		return pwd;
	}
	public String getNewpwd() {
		return newpwd;
	}
	public String getAcno() {
		return acno;
	}
	public int getBalance() {
		return balance;
	}
	public void setName(String name) {
		this.name = name;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public void setRole(String role) {
		this.role = role;
	}
	public void setUn(String un) {
		this.un = un;
	}
	public void setPwd(String pwd) {
		this.pwd = pwd;
	}
	public void setNewpwd(String newpwd) {
		this.newpwd = newpwd;
	}
	public void setAcno(String acno) {
		this.acno = acno;
	}
	public void setBalance(int balance) {
		this.balance = balance;
	}	
	private void connect() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dxc", "root", "LeBron23");
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public void fetch() {
		try {
			String sql = "SELECT * FROM users WHERE name =?";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, name);
			res = pstmt.executeQuery();
			// https://stackoverflow.com/a/28165814
			ResultSetMetaData rsmd = res.getMetaData();
			int columnsNumber = rsmd.getColumnCount();
			if (res.next()) {
				name = res.getString("name");
				email = res.getString("email");
				role = res.getString("role");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
	}
	
	public int register() {
		try {
			String sql = "Insert into users values (?,?,?,?,?,?)";
			Date date = new Date();
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, name);
			pstmt.setString(2, email);
			pstmt.setString(3, un);
			pstmt.setString(4, pwd);
			pstmt.setLong(5, date.getTime());
			pstmt.setInt(6, 0);
			return pstmt.executeUpdate();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	
	public int login() {
		try {
			String sql = "SELECT * from users where email=? and password=?";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, email);
			pstmt.setString(2, pwd);
			
			res = pstmt.executeQuery();
			if (res.next()) {
				name = res.getString("name");
				un = res.getString("username");
				acno = res.getString("acno");
				balance = res.getInt("balance");
				return 1;
			}
			else {
				return 0;
			}
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	
	public int changePwd() {
		try {
			String sql1 = "Select * from users where username=? AND password=?";
			pstmt = con.prepareStatement(sql1);
			pstmt.setString(1, un);
			pstmt.setString(2, pwd);
			res = pstmt.executeQuery();
			if (res.next() == true) {
				String sql2 = "UPDATE USERS SET PASSWORD=? WHERE USERNAME=?";
				pstmt = con.prepareStatement(sql2);
				pstmt.setString(1, newpwd);
				pstmt.setString(2, un);
				int x = pstmt.executeUpdate();
				return x;
			}
			else {
				return 0;
			}
			
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	
	public int modifyBalance(int amount, int plusMinus) {
		try {
			String sql1 = "Select * from users where username=? AND password=?";
			pstmt = con.prepareStatement(sql1);
			pstmt.setString(1, un);
			pstmt.setString(2, pwd);
			res = pstmt.executeQuery();
			//System.out.print(res.next());
			if (res.next() == true) {
				String sql2 = "UPDATE users SET balance=? WHERE username=? AND password=?";
				pstmt = con.prepareStatement(sql2);
				pstmt.setInt(1, balance + amount * plusMinus);
				pstmt.setString(2, un);
				pstmt.setString(3, pwd);
				int x = pstmt.executeUpdate();
				setBalance(balance + amount * plusMinus);
				return x;
			}
			else {
				return 0;
			}
		}
		catch (Exception e) {
			e.printStackTrace();
			return 0;
		}
	}
	
	public int transfer(int transfer, String racno) {
		try {
			String sql1 = "Select * from users where username=? AND password=?";
			pstmt = con.prepareStatement(sql1);
			pstmt.setString(1, un);
			pstmt.setString(2, pwd);
			res = pstmt.executeQuery();
			if (res.next() == true) {
				if (res.getInt("balance") < transfer) {
					return -1;
				}
				else {
					String sendSql = "UPDATE users SET balance=? WHERE username=? AND password=?";
					pstmt = con.prepareStatement(sendSql);
					pstmt.setInt(1, balance - transfer);
					pstmt.setString(2, un);
					pstmt.setString(3, pwd);
					int x = pstmt.executeUpdate();
					setBalance(balance - transfer);
					String receiveSql = "UPDATE users SET balance=? WHERE acno=?";
					pstmt = con.prepareStatement(receiveSql);
					pstmt.setInt(1, balance + transfer);
					pstmt.setString(2, racno);
					int y = pstmt.executeUpdate();
					return x + y;
				}
			}
			else {
				return 0;
			}
		}
		catch (Exception e) {
			e.printStackTrace();
			return 0;
		}
	}
}
